using System;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using CCDPlanetHelper.Models;
using Fooxboy.NucleusBot;
using Fooxboy.NucleusBot.Interfaces;
using Fooxboy.NucleusBot.Models;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;

namespace CCDPlanetHelper.Commands.Admins
{
    public class MailingCommand:INucleusCommand
    {
        public string Command => "mailing";
        public string[] Aliases => new[] {"—Ä–∞—Å—Å—ã–ª–∫–∞"};
        public void Execute(Message msg, IMessageSenderService sender, IBot bot)
        {
            var file = File.ReadAllText("AdminsConfig.json");
            var admins = JsonConvert.DeserializeObject<Models.AdminsModels>(file);

            if (!(admins.Users.Any(u => u == msg.MessageVK.FromId)))
            {
                sender.Text("üõë –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", msg.ChatId);
                return;
            }

            var users = JsonConvert.DeserializeObject<MailingModel>(File.ReadAllText("MailingUsers.json")).Users;

            var text = string.Empty;
            var words = msg.Text.Split(" ");

            for (int i = 1; i < words.Length; i++)
            {
                text += words[i] + " ";
            }

            sender.Text("‚åõ –ù–∞—á–∞—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...", msg.ChatId);
            int sended = 0;
            foreach (var userId in users)
            {
                Thread.Sleep(1000);
                try
                {
                    sender.Text($"üì§ –†–∞—Å—Å—ã–ª–∫–∞:\n {text} \n ‚ùì–ß—Ç–æ–±—ã –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, –Ω–∞–ø–∏—à–∏—Ç–µ \"–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è\"", userId);
                    sended++;
                }
                catch (Exception e)
                {
                    var bott = bot as Bot;
                    bott.GetLogger().Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é..");
                } 
            }
            
            sender.Text($"‚úî –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sended} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏–∑ {users.Count()}", msg.ChatId);
            

        }

        public void Init(IBot bot, ILoggerService logger)
        {
            
        }
    }
}